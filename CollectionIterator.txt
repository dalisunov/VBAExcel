VERSION 1.0 CLASS
BEGIN
  MultiUse = -1  'True
END
Attribute VB_Name = "CollectionIterator"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Option Explicit

' ------------------------------------------------------------------
' # Объявление типа данных
' ------------------------------------------------------------------

Private Type TIterator
    Collection As Collection
    currentIndex As Long
End Type

' ------------------------------------------------------------------
' # Переменные класса
' ------------------------------------------------------------------

Private this As TIterator

' ------------------------------------------------------------------
' # Объявление событий
' ------------------------------------------------------------------

Public Event OnMoveNext(ByVal newIndex As Long)
Public Event OnReset()
Public Event OnCollectionChanged()

' ------------------------------------------------------------------
' # Методы работы с коллекцией
' ------------------------------------------------------------------

' # [Property Set Collection] - Установка коллекции для итерации
Public Property Set Collection(ByVal col As Collection)
    Set this.Collection = col
    this.currentIndex = 0
    RaiseEvent OnCollectionChanged 'Сообщаем об изменении коллекции.
End Property

' ------------------------------------------------------------------
' # Методы итерации
' ------------------------------------------------------------------

' # [Function MoveNext] - Переход к следующему элементу
Public Function MoveNext() As Boolean
    If this.currentIndex < this.Collection.Count Then
        this.currentIndex = this.currentIndex + 1
        RaiseEvent OnMoveNext(this.currentIndex)
        MoveNext = True
    Else
        MoveNext = False
    End If
End Function

' # [Sub Reset] - Сброс итератора
Public Sub Reset()
    this.currentIndex = 0
    RaiseEvent OnReset
End Sub

' ------------------------------------------------------------------
' # Методы доступа к текущему элементу
' ------------------------------------------------------------------

' # [Property Get Current] - Получение текущего элемента
Public Property Get Current() As Variant
    If this.currentIndex > 0 And this.currentIndex <= this.Collection.Count Then
        If IsObject(this.Collection(this.currentIndex)) Then
            Set Current = this.Collection(this.currentIndex)
        Else
            Current = this.Collection(this.currentIndex)
        End If
    End If
End Property
